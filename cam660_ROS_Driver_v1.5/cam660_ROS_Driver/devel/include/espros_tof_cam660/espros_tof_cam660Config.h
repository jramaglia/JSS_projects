//#line 2 "/opt/ros/melodic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"
// *********************************************************
//
// File autogenerated for the espros_tof_cam660 package
// by the dynamic_reconfigure package.
// Please do not edit.
//
// ********************************************************/

#ifndef __espros_tof_cam660__ESPROS_TOF_CAM660CONFIG_H__
#define __espros_tof_cam660__ESPROS_TOF_CAM660CONFIG_H__

#if __cplusplus >= 201103L
#define DYNAMIC_RECONFIGURE_FINAL final
#else
#define DYNAMIC_RECONFIGURE_FINAL
#endif

#include <dynamic_reconfigure/config_tools.h>
#include <limits>
#include <ros/node_handle.h>
#include <dynamic_reconfigure/ConfigDescription.h>
#include <dynamic_reconfigure/ParamDescription.h>
#include <dynamic_reconfigure/Group.h>
#include <dynamic_reconfigure/config_init_mutex.h>
#include <boost/any.hpp>

namespace espros_tof_cam660
{
  class espros_tof_cam660ConfigStatics;

  class espros_tof_cam660Config
  {
  public:
    class AbstractParamDescription : public dynamic_reconfigure::ParamDescription
    {
    public:
      AbstractParamDescription(std::string n, std::string t, uint32_t l,
          std::string d, std::string e)
      {
        name = n;
        type = t;
        level = l;
        description = d;
        edit_method = e;
      }

      virtual void clamp(espros_tof_cam660Config &config, const espros_tof_cam660Config &max, const espros_tof_cam660Config &min) const = 0;
      virtual void calcLevel(uint32_t &level, const espros_tof_cam660Config &config1, const espros_tof_cam660Config &config2) const = 0;
      virtual void fromServer(const ros::NodeHandle &nh, espros_tof_cam660Config &config) const = 0;
      virtual void toServer(const ros::NodeHandle &nh, const espros_tof_cam660Config &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, espros_tof_cam660Config &config) const = 0;
      virtual void toMessage(dynamic_reconfigure::Config &msg, const espros_tof_cam660Config &config) const = 0;
      virtual void getValue(const espros_tof_cam660Config &config, boost::any &val) const = 0;
    };

    typedef boost::shared_ptr<AbstractParamDescription> AbstractParamDescriptionPtr;
    typedef boost::shared_ptr<const AbstractParamDescription> AbstractParamDescriptionConstPtr;

    // Final keyword added to class because it has virtual methods and inherits
    // from a class with a non-virtual destructor.
    template <class T>
    class ParamDescription DYNAMIC_RECONFIGURE_FINAL : public AbstractParamDescription
    {
    public:
      ParamDescription(std::string a_name, std::string a_type, uint32_t a_level,
          std::string a_description, std::string a_edit_method, T espros_tof_cam660Config::* a_f) :
        AbstractParamDescription(a_name, a_type, a_level, a_description, a_edit_method),
        field(a_f)
      {}

      T (espros_tof_cam660Config::* field);

      virtual void clamp(espros_tof_cam660Config &config, const espros_tof_cam660Config &max, const espros_tof_cam660Config &min) const
      {
        if (config.*field > max.*field)
          config.*field = max.*field;

        if (config.*field < min.*field)
          config.*field = min.*field;
      }

      virtual void calcLevel(uint32_t &comb_level, const espros_tof_cam660Config &config1, const espros_tof_cam660Config &config2) const
      {
        if (config1.*field != config2.*field)
          comb_level |= level;
      }

      virtual void fromServer(const ros::NodeHandle &nh, espros_tof_cam660Config &config) const
      {
        nh.getParam(name, config.*field);
      }

      virtual void toServer(const ros::NodeHandle &nh, const espros_tof_cam660Config &config) const
      {
        nh.setParam(name, config.*field);
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, espros_tof_cam660Config &config) const
      {
        return dynamic_reconfigure::ConfigTools::getParameter(msg, name, config.*field);
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const espros_tof_cam660Config &config) const
      {
        dynamic_reconfigure::ConfigTools::appendParameter(msg, name, config.*field);
      }

      virtual void getValue(const espros_tof_cam660Config &config, boost::any &val) const
      {
        val = config.*field;
      }
    };

    class AbstractGroupDescription : public dynamic_reconfigure::Group
    {
      public:
      AbstractGroupDescription(std::string n, std::string t, int p, int i, bool s)
      {
        name = n;
        type = t;
        parent = p;
        state = s;
        id = i;
      }

      std::vector<AbstractParamDescriptionConstPtr> abstract_parameters;
      bool state;

      virtual void toMessage(dynamic_reconfigure::Config &msg, const boost::any &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, boost::any &config) const =0;
      virtual void updateParams(boost::any &cfg, espros_tof_cam660Config &top) const= 0;
      virtual void setInitialState(boost::any &cfg) const = 0;


      void convertParams()
      {
        for(std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = abstract_parameters.begin(); i != abstract_parameters.end(); ++i)
        {
          parameters.push_back(dynamic_reconfigure::ParamDescription(**i));
        }
      }
    };

    typedef boost::shared_ptr<AbstractGroupDescription> AbstractGroupDescriptionPtr;
    typedef boost::shared_ptr<const AbstractGroupDescription> AbstractGroupDescriptionConstPtr;

    // Final keyword added to class because it has virtual methods and inherits
    // from a class with a non-virtual destructor.
    template<class T, class PT>
    class GroupDescription DYNAMIC_RECONFIGURE_FINAL : public AbstractGroupDescription
    {
    public:
      GroupDescription(std::string a_name, std::string a_type, int a_parent, int a_id, bool a_s, T PT::* a_f) : AbstractGroupDescription(a_name, a_type, a_parent, a_id, a_s), field(a_f)
      {
      }

      GroupDescription(const GroupDescription<T, PT>& g): AbstractGroupDescription(g.name, g.type, g.parent, g.id, g.state), field(g.field), groups(g.groups)
      {
        parameters = g.parameters;
        abstract_parameters = g.abstract_parameters;
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, boost::any &cfg) const
      {
        PT* config = boost::any_cast<PT*>(cfg);
        if(!dynamic_reconfigure::ConfigTools::getGroupState(msg, name, (*config).*field))
          return false;

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = &((*config).*field);
          if(!(*i)->fromMessage(msg, n))
            return false;
        }

        return true;
      }

      virtual void setInitialState(boost::any &cfg) const
      {
        PT* config = boost::any_cast<PT*>(cfg);
        T* group = &((*config).*field);
        group->state = state;

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = boost::any(&((*config).*field));
          (*i)->setInitialState(n);
        }

      }

      virtual void updateParams(boost::any &cfg, espros_tof_cam660Config &top) const
      {
        PT* config = boost::any_cast<PT*>(cfg);

        T* f = &((*config).*field);
        f->setParams(top, abstract_parameters);

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = &((*config).*field);
          (*i)->updateParams(n, top);
        }
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const boost::any &cfg) const
      {
        const PT config = boost::any_cast<PT>(cfg);
        dynamic_reconfigure::ConfigTools::appendGroup<T>(msg, name, id, parent, config.*field);

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          (*i)->toMessage(msg, config.*field);
        }
      }

      T (PT::* field);
      std::vector<espros_tof_cam660Config::AbstractGroupDescriptionConstPtr> groups;
    };

class DEFAULT
{
  public:
    DEFAULT()
    {
      state = true;
      name = "Default";
    }

    void setParams(espros_tof_cam660Config &config, const std::vector<AbstractParamDescriptionConstPtr> params)
    {
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator _i = params.begin(); _i != params.end(); ++_i)
      {
        boost::any val;
        (*_i)->getValue(config, val);

        if("lens_type"==(*_i)->name){lens_type = boost::any_cast<int>(val);}
        if("lens_center_offset_x"==(*_i)->name){lens_center_offset_x = boost::any_cast<int>(val);}
        if("lens_center_offset_y"==(*_i)->name){lens_center_offset_y = boost::any_cast<int>(val);}
        if("image_type"==(*_i)->name){image_type = boost::any_cast<int>(val);}
        if("start_stream"==(*_i)->name){start_stream = boost::any_cast<bool>(val);}
        if("integration_time_tof_1"==(*_i)->name){integration_time_tof_1 = boost::any_cast<int>(val);}
        if("integration_time_tof_2"==(*_i)->name){integration_time_tof_2 = boost::any_cast<int>(val);}
        if("integration_time_gray"==(*_i)->name){integration_time_gray = boost::any_cast<int>(val);}
        if("offset"==(*_i)->name){offset = boost::any_cast<int>(val);}
        if("min_amplitude"==(*_i)->name){min_amplitude = boost::any_cast<int>(val);}
        if("frequency_modulation"==(*_i)->name){frequency_modulation = boost::any_cast<int>(val);}
        if("channel"==(*_i)->name){channel = boost::any_cast<int>(val);}
        if("median_filter"==(*_i)->name){median_filter = boost::any_cast<bool>(val);}
        if("average_filter"==(*_i)->name){average_filter = boost::any_cast<bool>(val);}
        if("temporal_filter_factor"==(*_i)->name){temporal_filter_factor = boost::any_cast<double>(val);}
        if("temporal_filter_threshold"==(*_i)->name){temporal_filter_threshold = boost::any_cast<int>(val);}
        if("edge_filter_threshold"==(*_i)->name){edge_filter_threshold = boost::any_cast<int>(val);}
        if("temporal_edge_filter_threshold_low"==(*_i)->name){temporal_edge_filter_threshold_low = boost::any_cast<int>(val);}
        if("temporal_edge_filter_threshold_high"==(*_i)->name){temporal_edge_filter_threshold_high = boost::any_cast<int>(val);}
        if("interference_detection_limit"==(*_i)->name){interference_detection_limit = boost::any_cast<int>(val);}
        if("use_last_value"==(*_i)->name){use_last_value = boost::any_cast<bool>(val);}
        if("enable_cartesian"==(*_i)->name){enable_cartesian = boost::any_cast<bool>(val);}
        if("enable_point_cloud"==(*_i)->name){enable_point_cloud = boost::any_cast<bool>(val);}
      }
    }

    int lens_type;
int lens_center_offset_x;
int lens_center_offset_y;
int image_type;
bool start_stream;
int integration_time_tof_1;
int integration_time_tof_2;
int integration_time_gray;
int offset;
int min_amplitude;
int frequency_modulation;
int channel;
bool median_filter;
bool average_filter;
double temporal_filter_factor;
int temporal_filter_threshold;
int edge_filter_threshold;
int temporal_edge_filter_threshold_low;
int temporal_edge_filter_threshold_high;
int interference_detection_limit;
bool use_last_value;
bool enable_cartesian;
bool enable_point_cloud;

    bool state;
    std::string name;

    
}groups;



//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int lens_type;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int lens_center_offset_x;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int lens_center_offset_y;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int image_type;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool start_stream;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int integration_time_tof_1;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int integration_time_tof_2;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int integration_time_gray;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int offset;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int min_amplitude;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int frequency_modulation;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int channel;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool median_filter;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool average_filter;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double temporal_filter_factor;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int temporal_filter_threshold;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int edge_filter_threshold;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int temporal_edge_filter_threshold_low;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int temporal_edge_filter_threshold_high;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int interference_detection_limit;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool use_last_value;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool enable_cartesian;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool enable_point_cloud;
//#line 228 "/opt/ros/melodic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"

    bool __fromMessage__(dynamic_reconfigure::Config &msg)
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();

      int count = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        if ((*i)->fromMessage(msg, *this))
          count++;

      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i ++)
      {
        if ((*i)->id == 0)
        {
          boost::any n = boost::any(this);
          (*i)->updateParams(n, *this);
          (*i)->fromMessage(msg, n);
        }
      }

      if (count != dynamic_reconfigure::ConfigTools::size(msg))
      {
        ROS_ERROR("espros_tof_cam660Config::__fromMessage__ called with an unexpected parameter.");
        ROS_ERROR("Booleans:");
        for (unsigned int i = 0; i < msg.bools.size(); i++)
          ROS_ERROR("  %s", msg.bools[i].name.c_str());
        ROS_ERROR("Integers:");
        for (unsigned int i = 0; i < msg.ints.size(); i++)
          ROS_ERROR("  %s", msg.ints[i].name.c_str());
        ROS_ERROR("Doubles:");
        for (unsigned int i = 0; i < msg.doubles.size(); i++)
          ROS_ERROR("  %s", msg.doubles[i].name.c_str());
        ROS_ERROR("Strings:");
        for (unsigned int i = 0; i < msg.strs.size(); i++)
          ROS_ERROR("  %s", msg.strs[i].name.c_str());
        // @todo Check that there are no duplicates. Make this error more
        // explicit.
        return false;
      }
      return true;
    }

    // This version of __toMessage__ is used during initialization of
    // statics when __getParamDescriptions__ can't be called yet.
    void __toMessage__(dynamic_reconfigure::Config &msg, const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__, const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__) const
    {
      dynamic_reconfigure::ConfigTools::clear(msg);
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->toMessage(msg, *this);

      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); ++i)
      {
        if((*i)->id == 0)
        {
          (*i)->toMessage(msg, *this);
        }
      }
    }

    void __toMessage__(dynamic_reconfigure::Config &msg) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();
      __toMessage__(msg, __param_descriptions__, __group_descriptions__);
    }

    void __toServer__(const ros::NodeHandle &nh) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->toServer(nh, *this);
    }

    void __fromServer__(const ros::NodeHandle &nh)
    {
      static bool setup=false;

      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->fromServer(nh, *this);

      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();
      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i++){
        if (!setup && (*i)->id == 0) {
          setup = true;
          boost::any n = boost::any(this);
          (*i)->setInitialState(n);
        }
      }
    }

    void __clamp__()
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const espros_tof_cam660Config &__max__ = __getMax__();
      const espros_tof_cam660Config &__min__ = __getMin__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->clamp(*this, __max__, __min__);
    }

    uint32_t __level__(const espros_tof_cam660Config &config) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      uint32_t level = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->calcLevel(level, config, *this);
      return level;
    }

    static const dynamic_reconfigure::ConfigDescription &__getDescriptionMessage__();
    static const espros_tof_cam660Config &__getDefault__();
    static const espros_tof_cam660Config &__getMax__();
    static const espros_tof_cam660Config &__getMin__();
    static const std::vector<AbstractParamDescriptionConstPtr> &__getParamDescriptions__();
    static const std::vector<AbstractGroupDescriptionConstPtr> &__getGroupDescriptions__();

  private:
    static const espros_tof_cam660ConfigStatics *__get_statics__();
  };

  template <> // Max and min are ignored for strings.
  inline void espros_tof_cam660Config::ParamDescription<std::string>::clamp(espros_tof_cam660Config &config, const espros_tof_cam660Config &max, const espros_tof_cam660Config &min) const
  {
    (void) config;
    (void) min;
    (void) max;
    return;
  }

  class espros_tof_cam660ConfigStatics
  {
    friend class espros_tof_cam660Config;

    espros_tof_cam660ConfigStatics()
    {
espros_tof_cam660Config::GroupDescription<espros_tof_cam660Config::DEFAULT, espros_tof_cam660Config> Default("Default", "", 0, 0, true, &espros_tof_cam660Config::groups);
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.lens_type = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.lens_type = 2;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.lens_type = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(espros_tof_cam660Config::AbstractParamDescriptionConstPtr(new espros_tof_cam660Config::ParamDescription<int>("lens_type", "int", 0, "Lens type", "{'enum_description': 'An enum to set lens type', 'enum': [{'srcline': 10, 'description': 'WideField', 'srcfile': '/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'WideField'}, {'srcline': 11, 'description': 'StandardField', 'srcfile': '/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'StandardField'}, {'srcline': 12, 'description': 'NarrowField', 'srcfile': '/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'NarrowField'}]}", &espros_tof_cam660Config::lens_type)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(espros_tof_cam660Config::AbstractParamDescriptionConstPtr(new espros_tof_cam660Config::ParamDescription<int>("lens_type", "int", 0, "Lens type", "{'enum_description': 'An enum to set lens type', 'enum': [{'srcline': 10, 'description': 'WideField', 'srcfile': '/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'WideField'}, {'srcline': 11, 'description': 'StandardField', 'srcfile': '/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'StandardField'}, {'srcline': 12, 'description': 'NarrowField', 'srcfile': '/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'NarrowField'}]}", &espros_tof_cam660Config::lens_type)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.lens_center_offset_x = -50;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.lens_center_offset_x = 50;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.lens_center_offset_x = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(espros_tof_cam660Config::AbstractParamDescriptionConstPtr(new espros_tof_cam660Config::ParamDescription<int>("lens_center_offset_x", "int", 0, "Lens optical center offset X direction [pix]", "", &espros_tof_cam660Config::lens_center_offset_x)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(espros_tof_cam660Config::AbstractParamDescriptionConstPtr(new espros_tof_cam660Config::ParamDescription<int>("lens_center_offset_x", "int", 0, "Lens optical center offset X direction [pix]", "", &espros_tof_cam660Config::lens_center_offset_x)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.lens_center_offset_y = -50;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.lens_center_offset_y = 50;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.lens_center_offset_y = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(espros_tof_cam660Config::AbstractParamDescriptionConstPtr(new espros_tof_cam660Config::ParamDescription<int>("lens_center_offset_y", "int", 0, "Lens optical center offset Y direction [pix]", "", &espros_tof_cam660Config::lens_center_offset_y)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(espros_tof_cam660Config::AbstractParamDescriptionConstPtr(new espros_tof_cam660Config::ParamDescription<int>("lens_center_offset_y", "int", 0, "Lens optical center offset Y direction [pix]", "", &espros_tof_cam660Config::lens_center_offset_y)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.image_type = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.image_type = 3;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.image_type = 1;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(espros_tof_cam660Config::AbstractParamDescriptionConstPtr(new espros_tof_cam660Config::ParamDescription<int>("image_type", "int", 0, "Image type", "{'enum_description': 'An enum to set image type', 'enum': [{'srcline': 16, 'description': 'Grayscale', 'srcfile': '/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'Grayscale'}, {'srcline': 17, 'description': 'Distance', 'srcfile': '/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'Distance'}, {'srcline': 18, 'description': 'Distance&Amplitude', 'srcfile': '/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'DistranceAmplitude'}, {'srcline': 19, 'description': 'DCS', 'srcfile': '/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'DCS'}]}", &espros_tof_cam660Config::image_type)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(espros_tof_cam660Config::AbstractParamDescriptionConstPtr(new espros_tof_cam660Config::ParamDescription<int>("image_type", "int", 0, "Image type", "{'enum_description': 'An enum to set image type', 'enum': [{'srcline': 16, 'description': 'Grayscale', 'srcfile': '/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'Grayscale'}, {'srcline': 17, 'description': 'Distance', 'srcfile': '/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'Distance'}, {'srcline': 18, 'description': 'Distance&Amplitude', 'srcfile': '/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'DistranceAmplitude'}, {'srcline': 19, 'description': 'DCS', 'srcfile': '/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'DCS'}]}", &espros_tof_cam660Config::image_type)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.start_stream = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.start_stream = 1;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.start_stream = 1;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(espros_tof_cam660Config::AbstractParamDescriptionConstPtr(new espros_tof_cam660Config::ParamDescription<bool>("start_stream", "bool", 0, "Start / Stop image acquisition", "", &espros_tof_cam660Config::start_stream)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(espros_tof_cam660Config::AbstractParamDescriptionConstPtr(new espros_tof_cam660Config::ParamDescription<bool>("start_stream", "bool", 0, "Start / Stop image acquisition", "", &espros_tof_cam660Config::start_stream)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.integration_time_tof_1 = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.integration_time_tof_1 = 4000;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.integration_time_tof_1 = 50;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(espros_tof_cam660Config::AbstractParamDescriptionConstPtr(new espros_tof_cam660Config::ParamDescription<int>("integration_time_tof_1", "int", 0, "Integration time TOF1 [uS]", "", &espros_tof_cam660Config::integration_time_tof_1)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(espros_tof_cam660Config::AbstractParamDescriptionConstPtr(new espros_tof_cam660Config::ParamDescription<int>("integration_time_tof_1", "int", 0, "Integration time TOF1 [uS]", "", &espros_tof_cam660Config::integration_time_tof_1)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.integration_time_tof_2 = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.integration_time_tof_2 = 4000;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.integration_time_tof_2 = 400;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(espros_tof_cam660Config::AbstractParamDescriptionConstPtr(new espros_tof_cam660Config::ParamDescription<int>("integration_time_tof_2", "int", 0, "Integration time TOF2 [uS]", "", &espros_tof_cam660Config::integration_time_tof_2)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(espros_tof_cam660Config::AbstractParamDescriptionConstPtr(new espros_tof_cam660Config::ParamDescription<int>("integration_time_tof_2", "int", 0, "Integration time TOF2 [uS]", "", &espros_tof_cam660Config::integration_time_tof_2)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.integration_time_gray = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.integration_time_gray = 100000;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.integration_time_gray = 3000;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(espros_tof_cam660Config::AbstractParamDescriptionConstPtr(new espros_tof_cam660Config::ParamDescription<int>("integration_time_gray", "int", 0, "Integration time Grayscale [uS]", "", &espros_tof_cam660Config::integration_time_gray)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(espros_tof_cam660Config::AbstractParamDescriptionConstPtr(new espros_tof_cam660Config::ParamDescription<int>("integration_time_gray", "int", 0, "Integration time Grayscale [uS]", "", &espros_tof_cam660Config::integration_time_gray)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.offset = -10000;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.offset = 10000;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.offset = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(espros_tof_cam660Config::AbstractParamDescriptionConstPtr(new espros_tof_cam660Config::ParamDescription<int>("offset", "int", 0, "offset mm", "", &espros_tof_cam660Config::offset)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(espros_tof_cam660Config::AbstractParamDescriptionConstPtr(new espros_tof_cam660Config::ParamDescription<int>("offset", "int", 0, "offset mm", "", &espros_tof_cam660Config::offset)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.min_amplitude = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.min_amplitude = 100000;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.min_amplitude = 100;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(espros_tof_cam660Config::AbstractParamDescriptionConstPtr(new espros_tof_cam660Config::ParamDescription<int>("min_amplitude", "int", 0, "threshold minAmplitude LSB", "", &espros_tof_cam660Config::min_amplitude)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(espros_tof_cam660Config::AbstractParamDescriptionConstPtr(new espros_tof_cam660Config::ParamDescription<int>("min_amplitude", "int", 0, "threshold minAmplitude LSB", "", &espros_tof_cam660Config::min_amplitude)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.frequency_modulation = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.frequency_modulation = 5;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.frequency_modulation = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(espros_tof_cam660Config::AbstractParamDescriptionConstPtr(new espros_tof_cam660Config::ParamDescription<int>("frequency_modulation", "int", 0, "Frequence modulation", "{'enum_description': 'An enum to set modulation frequency', 'enum': [{'srcline': 23, 'description': '24MHz', 'srcfile': '/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': '24MHz'}, {'srcline': 24, 'description': '12MHz', 'srcfile': '/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': '12MHz'}, {'srcline': 25, 'description': '6MHz', 'srcfile': '/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': '6MHz'}, {'srcline': 26, 'description': '3MHz', 'srcfile': '/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': '3MHz'}, {'srcline': 27, 'description': '1_5MHz', 'srcfile': '/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg', 'cconsttype': 'const int', 'value': 4, 'ctype': 'int', 'type': 'int', 'name': '1_5MHz'}, {'srcline': 28, 'description': '0_75MHz', 'srcfile': '/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': '0_75MHz'}]}", &espros_tof_cam660Config::frequency_modulation)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(espros_tof_cam660Config::AbstractParamDescriptionConstPtr(new espros_tof_cam660Config::ParamDescription<int>("frequency_modulation", "int", 0, "Frequence modulation", "{'enum_description': 'An enum to set modulation frequency', 'enum': [{'srcline': 23, 'description': '24MHz', 'srcfile': '/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': '24MHz'}, {'srcline': 24, 'description': '12MHz', 'srcfile': '/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': '12MHz'}, {'srcline': 25, 'description': '6MHz', 'srcfile': '/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': '6MHz'}, {'srcline': 26, 'description': '3MHz', 'srcfile': '/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': '3MHz'}, {'srcline': 27, 'description': '1_5MHz', 'srcfile': '/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg', 'cconsttype': 'const int', 'value': 4, 'ctype': 'int', 'type': 'int', 'name': '1_5MHz'}, {'srcline': 28, 'description': '0_75MHz', 'srcfile': '/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': '0_75MHz'}]}", &espros_tof_cam660Config::frequency_modulation)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.channel = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.channel = 15;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.channel = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(espros_tof_cam660Config::AbstractParamDescriptionConstPtr(new espros_tof_cam660Config::ParamDescription<int>("channel", "int", 0, "Chanel", "{'enum_description': 'An enum to set channel index', 'enum': [{'srcline': 32, 'description': '0', 'srcfile': '/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': '0'}, {'srcline': 33, 'description': '1', 'srcfile': '/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': '1'}, {'srcline': 34, 'description': '2', 'srcfile': '/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': '2'}, {'srcline': 35, 'description': '3', 'srcfile': '/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': '3'}, {'srcline': 36, 'description': '4', 'srcfile': '/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg', 'cconsttype': 'const int', 'value': 4, 'ctype': 'int', 'type': 'int', 'name': '4'}, {'srcline': 37, 'description': '5', 'srcfile': '/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg', 'cconsttype': 'const int', 'value': 5, 'ctype': 'int', 'type': 'int', 'name': '5'}, {'srcline': 38, 'description': '6', 'srcfile': '/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg', 'cconsttype': 'const int', 'value': 6, 'ctype': 'int', 'type': 'int', 'name': '6'}, {'srcline': 39, 'description': '7', 'srcfile': '/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg', 'cconsttype': 'const int', 'value': 7, 'ctype': 'int', 'type': 'int', 'name': '7'}, {'srcline': 40, 'description': '8', 'srcfile': '/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg', 'cconsttype': 'const int', 'value': 8, 'ctype': 'int', 'type': 'int', 'name': '8'}, {'srcline': 41, 'description': '9', 'srcfile': '/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg', 'cconsttype': 'const int', 'value': 9, 'ctype': 'int', 'type': 'int', 'name': '9'}, {'srcline': 42, 'description': '10', 'srcfile': '/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg', 'cconsttype': 'const int', 'value': 10, 'ctype': 'int', 'type': 'int', 'name': '10'}, {'srcline': 43, 'description': '11', 'srcfile': '/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg', 'cconsttype': 'const int', 'value': 11, 'ctype': 'int', 'type': 'int', 'name': '11'}, {'srcline': 44, 'description': '12', 'srcfile': '/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg', 'cconsttype': 'const int', 'value': 12, 'ctype': 'int', 'type': 'int', 'name': '12'}, {'srcline': 45, 'description': '13', 'srcfile': '/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg', 'cconsttype': 'const int', 'value': 13, 'ctype': 'int', 'type': 'int', 'name': '13'}, {'srcline': 46, 'description': '14', 'srcfile': '/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg', 'cconsttype': 'const int', 'value': 14, 'ctype': 'int', 'type': 'int', 'name': '14'}, {'srcline': 47, 'description': '15', 'srcfile': '/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg', 'cconsttype': 'const int', 'value': 15, 'ctype': 'int', 'type': 'int', 'name': '15'}]}", &espros_tof_cam660Config::channel)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(espros_tof_cam660Config::AbstractParamDescriptionConstPtr(new espros_tof_cam660Config::ParamDescription<int>("channel", "int", 0, "Chanel", "{'enum_description': 'An enum to set channel index', 'enum': [{'srcline': 32, 'description': '0', 'srcfile': '/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': '0'}, {'srcline': 33, 'description': '1', 'srcfile': '/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': '1'}, {'srcline': 34, 'description': '2', 'srcfile': '/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': '2'}, {'srcline': 35, 'description': '3', 'srcfile': '/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': '3'}, {'srcline': 36, 'description': '4', 'srcfile': '/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg', 'cconsttype': 'const int', 'value': 4, 'ctype': 'int', 'type': 'int', 'name': '4'}, {'srcline': 37, 'description': '5', 'srcfile': '/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg', 'cconsttype': 'const int', 'value': 5, 'ctype': 'int', 'type': 'int', 'name': '5'}, {'srcline': 38, 'description': '6', 'srcfile': '/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg', 'cconsttype': 'const int', 'value': 6, 'ctype': 'int', 'type': 'int', 'name': '6'}, {'srcline': 39, 'description': '7', 'srcfile': '/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg', 'cconsttype': 'const int', 'value': 7, 'ctype': 'int', 'type': 'int', 'name': '7'}, {'srcline': 40, 'description': '8', 'srcfile': '/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg', 'cconsttype': 'const int', 'value': 8, 'ctype': 'int', 'type': 'int', 'name': '8'}, {'srcline': 41, 'description': '9', 'srcfile': '/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg', 'cconsttype': 'const int', 'value': 9, 'ctype': 'int', 'type': 'int', 'name': '9'}, {'srcline': 42, 'description': '10', 'srcfile': '/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg', 'cconsttype': 'const int', 'value': 10, 'ctype': 'int', 'type': 'int', 'name': '10'}, {'srcline': 43, 'description': '11', 'srcfile': '/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg', 'cconsttype': 'const int', 'value': 11, 'ctype': 'int', 'type': 'int', 'name': '11'}, {'srcline': 44, 'description': '12', 'srcfile': '/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg', 'cconsttype': 'const int', 'value': 12, 'ctype': 'int', 'type': 'int', 'name': '12'}, {'srcline': 45, 'description': '13', 'srcfile': '/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg', 'cconsttype': 'const int', 'value': 13, 'ctype': 'int', 'type': 'int', 'name': '13'}, {'srcline': 46, 'description': '14', 'srcfile': '/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg', 'cconsttype': 'const int', 'value': 14, 'ctype': 'int', 'type': 'int', 'name': '14'}, {'srcline': 47, 'description': '15', 'srcfile': '/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg', 'cconsttype': 'const int', 'value': 15, 'ctype': 'int', 'type': 'int', 'name': '15'}]}", &espros_tof_cam660Config::channel)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.median_filter = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.median_filter = 1;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.median_filter = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(espros_tof_cam660Config::AbstractParamDescriptionConstPtr(new espros_tof_cam660Config::ParamDescription<bool>("median_filter", "bool", 0, "enable/disable median filter", "", &espros_tof_cam660Config::median_filter)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(espros_tof_cam660Config::AbstractParamDescriptionConstPtr(new espros_tof_cam660Config::ParamDescription<bool>("median_filter", "bool", 0, "enable/disable median filter", "", &espros_tof_cam660Config::median_filter)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.average_filter = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.average_filter = 1;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.average_filter = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(espros_tof_cam660Config::AbstractParamDescriptionConstPtr(new espros_tof_cam660Config::ParamDescription<bool>("average_filter", "bool", 0, "enable/disable average filter", "", &espros_tof_cam660Config::average_filter)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(espros_tof_cam660Config::AbstractParamDescriptionConstPtr(new espros_tof_cam660Config::ParamDescription<bool>("average_filter", "bool", 0, "enable/disable average filter", "", &espros_tof_cam660Config::average_filter)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.temporal_filter_factor = 0.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.temporal_filter_factor = 1.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.temporal_filter_factor = 0.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(espros_tof_cam660Config::AbstractParamDescriptionConstPtr(new espros_tof_cam660Config::ParamDescription<double>("temporal_filter_factor", "double", 0, "Temporal filter factor [0...1]", "", &espros_tof_cam660Config::temporal_filter_factor)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(espros_tof_cam660Config::AbstractParamDescriptionConstPtr(new espros_tof_cam660Config::ParamDescription<double>("temporal_filter_factor", "double", 0, "Temporal filter factor [0...1]", "", &espros_tof_cam660Config::temporal_filter_factor)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.temporal_filter_threshold = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.temporal_filter_threshold = 10000;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.temporal_filter_threshold = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(espros_tof_cam660Config::AbstractParamDescriptionConstPtr(new espros_tof_cam660Config::ParamDescription<int>("temporal_filter_threshold", "int", 0, "Temporal filter threshold [mm]", "", &espros_tof_cam660Config::temporal_filter_threshold)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(espros_tof_cam660Config::AbstractParamDescriptionConstPtr(new espros_tof_cam660Config::ParamDescription<int>("temporal_filter_threshold", "int", 0, "Temporal filter threshold [mm]", "", &espros_tof_cam660Config::temporal_filter_threshold)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.edge_filter_threshold = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.edge_filter_threshold = 10000;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.edge_filter_threshold = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(espros_tof_cam660Config::AbstractParamDescriptionConstPtr(new espros_tof_cam660Config::ParamDescription<int>("edge_filter_threshold", "int", 0, "Edge filter threshold [mm]", "", &espros_tof_cam660Config::edge_filter_threshold)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(espros_tof_cam660Config::AbstractParamDescriptionConstPtr(new espros_tof_cam660Config::ParamDescription<int>("edge_filter_threshold", "int", 0, "Edge filter threshold [mm]", "", &espros_tof_cam660Config::edge_filter_threshold)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.temporal_edge_filter_threshold_low = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.temporal_edge_filter_threshold_low = 10000;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.temporal_edge_filter_threshold_low = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(espros_tof_cam660Config::AbstractParamDescriptionConstPtr(new espros_tof_cam660Config::ParamDescription<int>("temporal_edge_filter_threshold_low", "int", 0, "Temporal edge filter low threshold [mm]", "", &espros_tof_cam660Config::temporal_edge_filter_threshold_low)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(espros_tof_cam660Config::AbstractParamDescriptionConstPtr(new espros_tof_cam660Config::ParamDescription<int>("temporal_edge_filter_threshold_low", "int", 0, "Temporal edge filter low threshold [mm]", "", &espros_tof_cam660Config::temporal_edge_filter_threshold_low)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.temporal_edge_filter_threshold_high = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.temporal_edge_filter_threshold_high = 10000;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.temporal_edge_filter_threshold_high = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(espros_tof_cam660Config::AbstractParamDescriptionConstPtr(new espros_tof_cam660Config::ParamDescription<int>("temporal_edge_filter_threshold_high", "int", 0, "Temporal edge filter high threshold [mm]", "", &espros_tof_cam660Config::temporal_edge_filter_threshold_high)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(espros_tof_cam660Config::AbstractParamDescriptionConstPtr(new espros_tof_cam660Config::ParamDescription<int>("temporal_edge_filter_threshold_high", "int", 0, "Temporal edge filter high threshold [mm]", "", &espros_tof_cam660Config::temporal_edge_filter_threshold_high)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.interference_detection_limit = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.interference_detection_limit = 10000;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.interference_detection_limit = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(espros_tof_cam660Config::AbstractParamDescriptionConstPtr(new espros_tof_cam660Config::ParamDescription<int>("interference_detection_limit", "int", 0, "Interference detection limit [LSB]", "", &espros_tof_cam660Config::interference_detection_limit)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(espros_tof_cam660Config::AbstractParamDescriptionConstPtr(new espros_tof_cam660Config::ParamDescription<int>("interference_detection_limit", "int", 0, "Interference detection limit [LSB]", "", &espros_tof_cam660Config::interference_detection_limit)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.use_last_value = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.use_last_value = 1;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.use_last_value = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(espros_tof_cam660Config::AbstractParamDescriptionConstPtr(new espros_tof_cam660Config::ParamDescription<bool>("use_last_value", "bool", 0, "enable/disable interference detection useLastValue", "", &espros_tof_cam660Config::use_last_value)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(espros_tof_cam660Config::AbstractParamDescriptionConstPtr(new espros_tof_cam660Config::ParamDescription<bool>("use_last_value", "bool", 0, "enable/disable interference detection useLastValue", "", &espros_tof_cam660Config::use_last_value)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.enable_cartesian = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.enable_cartesian = 1;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.enable_cartesian = 1;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(espros_tof_cam660Config::AbstractParamDescriptionConstPtr(new espros_tof_cam660Config::ParamDescription<bool>("enable_cartesian", "bool", 0, "Enable/disbale cartesian transformation", "", &espros_tof_cam660Config::enable_cartesian)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(espros_tof_cam660Config::AbstractParamDescriptionConstPtr(new espros_tof_cam660Config::ParamDescription<bool>("enable_cartesian", "bool", 0, "Enable/disbale cartesian transformation", "", &espros_tof_cam660Config::enable_cartesian)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.enable_point_cloud = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.enable_point_cloud = 1;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.enable_point_cloud = 1;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(espros_tof_cam660Config::AbstractParamDescriptionConstPtr(new espros_tof_cam660Config::ParamDescription<bool>("enable_point_cloud", "bool", 0, "Publish point cloud data", "", &espros_tof_cam660Config::enable_point_cloud)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(espros_tof_cam660Config::AbstractParamDescriptionConstPtr(new espros_tof_cam660Config::ParamDescription<bool>("enable_point_cloud", "bool", 0, "Publish point cloud data", "", &espros_tof_cam660Config::enable_point_cloud)));
//#line 246 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.convertParams();
//#line 246 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __group_descriptions__.push_back(espros_tof_cam660Config::AbstractGroupDescriptionConstPtr(new espros_tof_cam660Config::GroupDescription<espros_tof_cam660Config::DEFAULT, espros_tof_cam660Config>(Default)));
//#line 366 "/opt/ros/melodic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"

      for (std::vector<espros_tof_cam660Config::AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); ++i)
      {
        __description_message__.groups.push_back(**i);
      }
      __max__.__toMessage__(__description_message__.max, __param_descriptions__, __group_descriptions__);
      __min__.__toMessage__(__description_message__.min, __param_descriptions__, __group_descriptions__);
      __default__.__toMessage__(__description_message__.dflt, __param_descriptions__, __group_descriptions__);
    }
    std::vector<espros_tof_cam660Config::AbstractParamDescriptionConstPtr> __param_descriptions__;
    std::vector<espros_tof_cam660Config::AbstractGroupDescriptionConstPtr> __group_descriptions__;
    espros_tof_cam660Config __max__;
    espros_tof_cam660Config __min__;
    espros_tof_cam660Config __default__;
    dynamic_reconfigure::ConfigDescription __description_message__;

    static const espros_tof_cam660ConfigStatics *get_instance()
    {
      // Split this off in a separate function because I know that
      // instance will get initialized the first time get_instance is
      // called, and I am guaranteeing that get_instance gets called at
      // most once.
      static espros_tof_cam660ConfigStatics instance;
      return &instance;
    }
  };

  inline const dynamic_reconfigure::ConfigDescription &espros_tof_cam660Config::__getDescriptionMessage__()
  {
    return __get_statics__()->__description_message__;
  }

  inline const espros_tof_cam660Config &espros_tof_cam660Config::__getDefault__()
  {
    return __get_statics__()->__default__;
  }

  inline const espros_tof_cam660Config &espros_tof_cam660Config::__getMax__()
  {
    return __get_statics__()->__max__;
  }

  inline const espros_tof_cam660Config &espros_tof_cam660Config::__getMin__()
  {
    return __get_statics__()->__min__;
  }

  inline const std::vector<espros_tof_cam660Config::AbstractParamDescriptionConstPtr> &espros_tof_cam660Config::__getParamDescriptions__()
  {
    return __get_statics__()->__param_descriptions__;
  }

  inline const std::vector<espros_tof_cam660Config::AbstractGroupDescriptionConstPtr> &espros_tof_cam660Config::__getGroupDescriptions__()
  {
    return __get_statics__()->__group_descriptions__;
  }

  inline const espros_tof_cam660ConfigStatics *espros_tof_cam660Config::__get_statics__()
  {
    const static espros_tof_cam660ConfigStatics *statics;

    if (statics) // Common case
      return statics;

    boost::mutex::scoped_lock lock(dynamic_reconfigure::__init_mutex__);

    if (statics) // In case we lost a race.
      return statics;

    statics = espros_tof_cam660ConfigStatics::get_instance();

    return statics;
  }

//#line 10 "/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg"
      const int espros_tof_cam660_WideField = 0;
//#line 11 "/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg"
      const int espros_tof_cam660_StandardField = 1;
//#line 12 "/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg"
      const int espros_tof_cam660_NarrowField = 2;
//#line 16 "/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg"
      const int espros_tof_cam660_Grayscale = 0;
//#line 17 "/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg"
      const int espros_tof_cam660_Distance = 1;
//#line 18 "/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg"
      const int espros_tof_cam660_DistranceAmplitude = 2;
//#line 19 "/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg"
      const int espros_tof_cam660_DCS = 3;
//#line 23 "/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg"
      const int espros_tof_cam660_24MHz = 0;
//#line 24 "/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg"
      const int espros_tof_cam660_12MHz = 1;
//#line 25 "/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg"
      const int espros_tof_cam660_6MHz = 2;
//#line 26 "/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg"
      const int espros_tof_cam660_3MHz = 3;
//#line 27 "/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg"
      const int espros_tof_cam660_1_5MHz = 4;
//#line 28 "/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg"
      const int espros_tof_cam660_0_75MHz = 2;
//#line 32 "/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg"
      const int espros_tof_cam660_0 = 0;
//#line 33 "/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg"
      const int espros_tof_cam660_1 = 1;
//#line 34 "/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg"
      const int espros_tof_cam660_2 = 2;
//#line 35 "/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg"
      const int espros_tof_cam660_3 = 3;
//#line 36 "/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg"
      const int espros_tof_cam660_4 = 4;
//#line 37 "/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg"
      const int espros_tof_cam660_5 = 5;
//#line 38 "/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg"
      const int espros_tof_cam660_6 = 6;
//#line 39 "/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg"
      const int espros_tof_cam660_7 = 7;
//#line 40 "/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg"
      const int espros_tof_cam660_8 = 8;
//#line 41 "/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg"
      const int espros_tof_cam660_9 = 9;
//#line 42 "/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg"
      const int espros_tof_cam660_10 = 10;
//#line 43 "/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg"
      const int espros_tof_cam660_11 = 11;
//#line 44 "/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg"
      const int espros_tof_cam660_12 = 12;
//#line 45 "/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg"
      const int espros_tof_cam660_13 = 13;
//#line 46 "/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg"
      const int espros_tof_cam660_14 = 14;
//#line 47 "/home/lsi/Projects/cam660_ROS_Driver/src/espros_tof_cam660/cfg/espros_tof_cam660.cfg"
      const int espros_tof_cam660_15 = 15;
}

#undef DYNAMIC_RECONFIGURE_FINAL

#endif // __ESPROS_TOF_CAM660RECONFIGURATOR_H__
